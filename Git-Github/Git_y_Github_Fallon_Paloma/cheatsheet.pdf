Git init: crea un repositorio local desde la terminal 
git config user.name; user.email: agrega mi identidad al repositorio
git config --global: agrega la indentidad de manera global
ls -a: lista los git realizados
git add nombre del archivo: agrega al stage area un archivo determinado
git add .: agrega todos los archivos al stage area 
git commit -m "..": crea el commit (historia de cambios de la carpeta)
git status: para ver el status de archivos agregados tracked y untracked
git log: registra un historial de los cambios de los proyectos, un historia de nuestros commit
rm -rf .git: borras todo el seguimiento
find . -name *git: busca todas las carpetas en las que se realizo un git
git log --online: simplifica los nombres de los commits 
git checkout commit "codigo del commit dado por git log --oneline: vuelvo al commit anterior
git checkout main: vuelvo al ultimo commit
git reset head~1: borro el ultimo commit, si quiero borrar los ultimos 2 pongo head~2 y asi sucesivamente
git restore .: restaura todos los archivos eliminados (en el commit que estoy situada)
git restore "nombre del archivo que quiero restaurar": restaura el archivo seleccionado
git remote add origin: conecto repositorio creado en github con repositorio local (lo uso cuando empiezo un proyecto desde cero)
git remote -v: verifico que este correctamente vinculado
git push origin main: envio mi trabajo del repositorio local al remoto
git clone http...: descargo los elementos de github (nube) en mi repositorio local
git pull origin main: envio mis proyectos a la nube
git restore --stage "nombre del archivo": saco elemntos de stage area (pasan a untracked)
git branch "nombre que le quiero poner a la rama": creo una nueva rama de manera local
git checkout "nombre de la rama de arriba": me posiciono en esa rama
git push origin "nombre de la rama de arriba": automaticamente creo una rama en el repo remoto que tendra el nombre de la rama que puse anteriormente


